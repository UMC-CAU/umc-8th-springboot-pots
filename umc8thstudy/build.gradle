plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.umcspring'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def generated = "src/main/generated"

sourceSets {
	main {
		java {
			srcDirs += generated
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

querydsl {
	jpa = true
	querydslSourcesDir = generated
}

tasks.named("compileQuerydsl").configure {
	options.annotationProcessorPath = configurations.querydsl
}