plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.umcspring'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/generated']
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def generatedDir = file('src/main/generated')

tasks.withType(JavaCompile).configureEach { compileTask ->
	// Q 타입 중복 생성 방지: 컴파일 시작 전에 generated 디렉터리 삭제
	compileTask.doFirst {
		if (generatedDir.exists()) {
			generatedDir.deleteDir()
		}
	}
	if (compileTask.name == 'compileQuerydsl') {
		compileTask.options.annotationProcessorPath = configurations.querydsl
	}
}

querydsl {
	jpa = true
	querydslSourcesDir = generatedDir
}

compileQuerydsl {
	// annotationProcessorPath를 querydsl 구성으로 지정
	options.annotationProcessorPath = configurations.querydsl
}